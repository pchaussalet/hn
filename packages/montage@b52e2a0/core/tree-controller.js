var Montage=require("./core").Montage,Map=require("collections/map"),WeakMap=require("collections/weak-map"),Object=require("collections/shim-object"),Node=exports.TreeControllerNode=Montage.specialize({expanded:{value:!0},content:{value:null},depth:{value:null},index:{value:null},isFinal:{value:null},parent:{value:null},children:{value:null},_controller:{value:null},_childrenContent:{value:null},_childrenEntries:{value:null},iterations:{value:null},junctions:{value:null},_junction:{value:null},_followingJunction:{value:null},_followingJunctions:{value:null},_entry:{value:null},constructor:{value:function(t,e,n,i,r){this.super(),this._controller=t,this.parent=e,this.content=n,this.depth=i,this._entry=r||[0,this],this.expanded=t.initiallyExpanded||!1,this.children=[],this.defineBinding("index",{"<-":"_entry.0"}),this.defineBinding("isFinal",{"<-":"index == parent.children.length - 1"}),this.defineBinding("_childrenContent",{"<-":"depth.defined() ? content.path(_controller.childrenPath ?? 'children') : []"}),this.defineBinding("_childrenEntries",{"<-":"_childrenContent.enumerate()"}),this.handleChildrenEntriesRangeChange(this._childrenEntries,[],0),this._childrenEntries.addRangeChangeListener(this,"childrenEntries"),this.defineBinding("iterations",{"<-":"[this].concat(expanded ? children.flatten{iterations} : [])"}),this.defineBinding("nodes",{"<-":"[this].concat(children.flatten{nodes})"}),this.defineBinding("_junction",{"<-":"isFinal ? 'final' : 'medial'"}),this.defineBinding("_followingJunction",{"<-":"isFinal ? 'after' : 'before'"}),this.defineBinding("_followingJunctions",{"<-":"(parent._followingJunctions ?? []).concat([_followingJunction])"}),this.defineBinding("junctions",{"<-":"(parent._followingJunctions ?? []).concat([_junction])"})}},findNodeByContent:{value:function(t,e){if(e=e||Object.is,e(this.content,t))return this;for(var n,i=0;this.children.length>i&&!(n=this.children[i].findNodeByContent(t,e));i++);return n}},preOrderWalk:{value:function(t){t(this);for(var e=0;this.children.length>e;e++)this.children[e].preOrderWalk(t)}},postOrderWalk:{value:function(t){for(var e=0;this.children.length>e;e++)this.children[e].postOrderWalk(t);t(this)}},handleChildrenEntriesRangeChange:{value:function(t,e,n){this.children.swap(n,e.length,t.map(function(t){return new this.constructor(this._controller,this,t[1],this.depth+1,t)},this))}}});exports.TreeController=Montage.specialize({content:{value:null},childrenPath:{value:null},initiallyExpanded:{value:null},allExpanded:{value:null},noneExpanded:{value:null},iterations:{value:null},root:{value:null},_roots:{value:null},constructor:{value:function(t,e,n){this.super(),this._roots=new WeakMap,this.addOwnPropertyChangeListener("content",this),this.defineBinding("iterations",{"<-":"root.iterations"}),this.defineBinding("nodes",{"<-":"root.nodes"}),this.defineBinding("allExpanded",{"<->":"nodes.every{expanded || children.length == 0}"}),this.defineBinding("noneExpanded",{"<->":"nodes.every{!expanded}"}),this.initiallyExpanded=n,this.childrenPath=e,this.content=t}},handleContentChange:{value:function(t){return t?(this._roots.has(t)||this._roots.set(t,new this.Node(this,null,t,0,null)),this.root=this._roots.get(t),void 0):(this.root=null,void 0)}},Node:{value:Node},findNodeByContent:{value:function(t,e){return this.root?this.root.findNodeByContent(t,e):null}},preOrderWalk:{value:function(t){this.root&&this.root.preOrderWalk(t)}},postOrderWalk:{value:function(t){this.root&&this.root.postOrderWalk(t)}}},{blueprintModuleId:require("./core")._blueprintModuleIdDescriptor,blueprint:require("./core")._blueprintDescriptor});