var Montage=require("./core").Montage,Target=require("./target").Target,Promise=require("./promise").Promise,Map=require("collections/map"),List=require("collections/list"),UNDO_OPERATION=0,REDO_OPERATION=1,UndoManager=exports.UndoManager=Target.specialize({_operationQueue:{value:null},_promiseOperationMap:{value:null},constructor:{value:function UndoManager(){this._operationQueue=[],this._promiseOperationMap=new Map,this._undoStack=new List,this._redoStack=new List,this._batchStack=new List,this.defineBinding("undoLabel",{"<-":"undoEntry.label || _promiseOperationMap.get(_undoStack.head.prev.value).label"}),this.defineBinding("undoCount",{"<-":"length",source:this._undoStack}),this.defineBinding("canUndo",{"<-":"!!length",source:this._undoStack}),this.defineBinding("isUndoing",{"<-":"!!undoEntry"}),this.defineBinding("redoLabel",{"<-":"redoEntry.label || _promiseOperationMap.get(_redoStack.head.prev.value).label"}),this.defineBinding("redoCount",{"<-":"length",source:this._redoStack}),this.defineBinding("canRedo",{"<-":"!!length",source:this._redoStack}),this.defineBinding("isRedoing",{"<-":"!!redoEntry"}),this.defineBinding("currentBatch",{"<-":"_batchStack.head.prev.value"})}},_maxUndoCount:{enumerable:!1,value:null},maxUndoCount:{get:function(){return this._maxUndoCount},set:function(t){t!==this._maxUndoCount&&(this._maxUndoCount=t,null!=this._maxUndoCount&&this._trimStacks())}},_undoStack:{value:null},undoCount:{value:0},_redoStack:{value:null},redoCount:{value:0},_trimStacks:{enumerable:!1,value:function(){var t=this._undoStack.length-this._maxUndoCount,e=this._redoStack.length-this._maxUndoCount;t>0&&this._undoStack.splice(0,t),e>0&&this._redoStack.splice(0,e)}},registrationEnabled:{value:!0},_batchStack:{value:null},currentBatch:{value:null},openBatch:{value:function(t){var e={};e.label=t,e.promisedOperations=[],this._batchStack.push(e)}},closeBatch:{value:function(){if(!this.currentBatch)throw Error("No batch operation to close");var t,e=this.currentBatch.label,n=this.currentBatch.promisedOperations,i=[],r=function(){t=Object.create(null),this.openBatch(e);var n=i.reduceRight(function(e,n){return e.then(function(){return o._resolveUndoEntry(t,n),t.undoFunction.apply(t.context,t.args)})},Promise.resolve());return n.finally(function(){o.closeBatch()})},a=n.reduce(function(t,e){return t.then(function(t){return t&&i.push(t),e})},Promise.resolve());this._batchStack.pop();var o=this;this.register(e,a.then(function(t){return i.push(t),[r,o]}))}},register:{value:function(t,e){var n,i=this;if(!Promise.isPromiseAlike(e))throw Error("UndoManager expected a promise");if(0===this._maxUndoCount||!this.registrationEnabled)return Promise.resolve(null);if(this.currentBatch)this.currentBatch.promisedOperations.push(e),n=e;else{var r={label:t};this._promiseOperationMap.set(e,r),this.isUndoing?(r.label=this.undoLabel,this._redoStack.length===this._maxUndoCount&&this._redoStack.shift(),this._redoStack.push(e)):(this._undoStack.length===this._maxUndoCount&&this._undoStack.shift(),this._undoStack.push(e),!this.isRedoing&&this._redoStack.length>0&&this.clearRedo()),this.isUndoing||this.isRedoing||this.dispatchEventNamed("operationRegistered",!0,!1),n=e.then(function(t){return i._resolveUndoEntry(r,t),r}).then(function(){return i._flushOperationQueue()})}return n}},_resolveUndoEntry:{value:function(t,e){var n,i,r,a;if("string"==typeof e[0]?(n=e[0],i=e[1],r=e[2],a=3):(i=e[0],r=e[1],a=2),n&&(t.label=n),"function"!=typeof i)throw Error("Need undo function for '"+t.label+"' operation, not: "+i);t.undoFunction=i,t.context=r,t.args=e.slice(a)}},_flushOperationQueue:{value:function(){var t,e=this._operationQueue,n=e.length,i=[],r=this._promiseOperationMap,a=this;if(0!==n){var o=!1,s=e.reduce(function(t,e){var n=a._promiseOperationMap.get(e);return o||"function"!=typeof n.undoFunction?(o=!0,t):(i.push(e),t.then(function(){return a._performOperation(n)}).then(function(){r.delete(e)}))},Promise.resolve());return t=i.length,t>0&&e.splice(0,t),s}}},_performOperation:{value:function(t){var e=this;t.operationType===UNDO_OPERATION?this.undoEntry=t:this.redoEntry=t;var n;try{n=t.undoFunction.apply(t.context,t.args)}catch(i){throw t.deferredOperation.reject(i),i}return Promise.isPromiseAlike(n)?n.finally(function(){e.undoEntry=null,e.redoEntry=null}).then(function(e){t.deferredOperation.resolve(e)},function(e){t.deferredOperation.reject(e)}):(this.undoEntry=null,this.redoEntry=null,t.deferredOperation.resolve(n),void 0)}},clearUndo:{value:function(){this._undoStack.splice(0,this._undoStack.length)}},clearRedo:{value:function(){this._redoStack.splice(0,this._redoStack.length)}},isUndoing:{value:!1},isRedoing:{value:!1},undoEntry:{enumerable:!1,value:null},redoEntry:{enumerable:!1,value:null},undo:{value:function(){if(0===this.undoCount)return Promise.resolve(null);var t=this;return this._scheduleOperation(this._undoStack.pop(),UNDO_OPERATION).then(function(e){return t.dispatchEventNamed("undo",!0,!1,e),e})}},redo:{value:function(){if(0===this.redoCount)return Promise.resolve(null);var t=this;return this._scheduleOperation(this._redoStack.pop(),REDO_OPERATION).then(function(e){return t.dispatchEventNamed("redo",!0,!1),e})}},_scheduleOperation:{value:function(t,e){var n=Promise.defer(),i=this._promiseOperationMap.get(t);return i.deferredOperation=n,i.operationType=e,this._operationQueue.push(t),this._flushOperationQueue().thenResolve(n.promise)}},canUndo:{value:null},canRedo:{value:null},undoLabel:{value:null},redoLabel:{value:null}}),_defaultUndoManager=null;Montage.defineProperty(exports,"defaultUndoManager",{get:function(){return _defaultUndoManager||(_defaultUndoManager=new UndoManager),_defaultUndoManager}});